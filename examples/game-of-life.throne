// Conway's Game of Life (https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life):
//  1. Any live cell with two or three live neighbours survives.
//  2. Any dead cell with three live neighbours becomes a live cell.
//  3. All other live cells die in the next generation. Similarly, all other dead cells stay dead.

// glider pattern
cell 1 0
cell 2 1
cell 0 2
cell 1 2
cell 2 2

#update: {
    // clean up 'draw' phrases from the previous iteration
    draw _ _ _ = ()
    () = #generate-neighbours
}

#generate-neighbours: {
    // place an 'n' marker phrase for each grid square neighbouring a live cell
    $cell X Y . - X 1 X0 . + X 1 X1 . - Y 1 Y0 . + Y 1 Y1 . !processed X Y =
        processed X Y . n X0 Y0 . n X Y0 . n X1 Y0 . n X1 Y . n X1 Y1 . n X Y1 . n X0 Y1 . n X0 Y

    () = #apply-rules
}

#apply-rules: {
    // keep any cell with exactly two live neighbours (rule 1)
    cell X Y . $n X Y . $n X Y . !n X Y = survive-cell X Y

    // spawn a live cell on any grid square with exactly three live neighbours (rules 1 and 2)
    $n X Y . $n X Y . $n X Y . !n X Y . !survive-cell X Y = survive-cell X Y

    () = #cleanup
}

#cleanup: {
    // discard any cells that did not survive (rule 3)
    cell _ _ = ()
    processed _ _ = ()
    n _ _ = ()
    () = #draw
}

#draw: {
    // draw each 'survive-cell' and convert it to a 'cell' for the next iteration
    survive-cell X Y = draw "â¬›" X Y . cell X Y
    () = ()
}